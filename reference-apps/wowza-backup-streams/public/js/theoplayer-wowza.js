!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){var r={registerPlayer:function(e){var t,n,r=null,a=null,o=!1,u=!1,l=!1,i=null,s=null,c=null;function d(){i({state:"unavailable",info:"The configured stream is currently unavailable."}),o=!0,function(){var e=p().querySelector(".stream-status");if(!e){(e=document.createElement("div")).className="stream-status";var t=h();if(t&&(e.style.background='url("'+t+'")',e.style.backgroundSize="cover"),r){var o=r.countdown_timestamp;if(o&&(o=new Date(1e3*parseInt(o))).getTime()>Date.now()){var u=document.createElement("div");u.className="stream-status-overlay";var l=o.toDateString(),i=o.toISOString().substr(11,5),s=r.title+"<br />"||!1;u.innerHTML=s+"Stream will start on:<br />"+l+" @ "+i,e.appendChild(u);var c=document.createElement("div");c.className="countdown",c.innerHTML="&nbsp;",u.appendChild(c),function(e){e=e.getTime();n=setInterval((function(){var t=(new Date).getTime(),r=e-t,a=Math.floor(r/864e5),o=Math.floor(r%864e5/36e5),u=Math.floor(r%36e5/6e4),l=Math.floor(r%6e4/1e3);p().querySelector(".countdown").innerHTML=a+"d "+o+"h "+u+"m "+l+"s ",r<0&&(clearInterval(n),p().querySelector(".countdown").innerHTML="Starting...")}),1e3)}(o)}}else e.textContent=a&&a.offlineText||"The stream is currently not available.",e.classList.add("no-data");p().appendChild(e)}}(),l||(l=!0,t=setInterval(w,f()))}function f(){return a&&a.retry||3e3}function v(){var e=p().querySelector(".stream-status");e&&e.parentNode.removeChild(e)}function m(){i({state:"available",info:"The configured stream is available."}),o=!1,v()}function p(){return e.element.parentNode.parentNode}function w(){var t=[e.source];if(a.backupStreams&&a.backupStreams.length>0)for(var n=0;n<a.backupStreams.length;n++)t.push(a.backupStreams[n]);console.log("sources",t);!function(){for(var e=[],n=0;n<t.length;n++){var r=t[n].sources[0].src,a=r,l=Math.round(1e12*Math.random());a=r.indexOf("?")>-1?r+"&rn="+l:r+"?rn="+l,function(n){e[n]=new XMLHttpRequest,e[n].open("GET",a,!0),e[n].onreadystatechange=function(){4===e[n].readyState&&200!==e[n].status&&u&&!o?d():4===e[n].readyState&&200===e[n].status&&o&&(m(),S(t[n],n))},e[n].send()}(n)}}()}function b(){u=!0,l||(l=!0,t=setInterval(w,f()))}function g(t){if(t.url==e.src){var n=t.url.split("?");c=n.length>1?n[1]:null}else if(c){var r=t.url+"?"+c;t.redirect({url:r})}}function y(){u=!1}function h(){return r&&r.image||e.source.metadata&&e.source.metadata.wowza&&e.source.metadata.wowza.placeholderImageUrl}function S(t,n){if(e.autoplay=!0,t){if(t.metadata.wowza.backupStreams)t=t;else{var r=e.source.metadata.wowza.backupStreams,a=function(e){e.metadata.wowza.backupStreams&&delete e.metadata.wowza.backupStreams;return e}(e.source);r[n-1]=a,t.metadata.wowza.backupStreams=r}e.source=t}else e.source=e.source}return e.addEventListener("sourcechange",(function(c){if(e&&(r=null,a=null,o=!1,clearInterval(t),clearInterval(n),u=!1,l=!1,i=null,s=null,e.network.removeEventListener("offline",d),e.removeEventListener("error",d),e.network.removeEventListener("online",m),e.removeEventListener("waiting",b),e.removeEventListener("playing",y),e.network.addRequestInterceptor(g)),v(),a=c.source.metadata&&c.source.metadata.wowza){e&&(e.network.addEventListener("offline",d),e.addEventListener("error",d),e.network.addEventListener("online",m),e.addEventListener("waiting",b),e.addEventListener("playing",y),a&&a.queryParametersPassthrough&&e.network.addRequestInterceptor(g));var f=a.jsonUrl;f&&(p=f,(w=new XMLHttpRequest).onreadystatechange=function(){4==this.readyState&&200==this.status&&(r=JSON.parse(w.responseText),s({data:r,status:"available"}),e.poster=h())},w.open("GET",p,!0),w.send()),i=a.statechangeCallback,s=a.datachangeCallback}var p,w})),{getStreamData:function(){return r},getState:function(){return o?"offline":"online"}}}};window.theoplayerWowza=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,