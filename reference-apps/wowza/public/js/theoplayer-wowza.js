!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){var r={registerPlayer:function(e){var t,n,r=null,a=null,o=!1,i=!1,l=!1,u=null,s=null;function c(){u({state:"unavailable",info:"The configured stream is currently unavailable."}),o=!0,function(){var e=f().querySelector(".stream-status");if(!e){(e=document.createElement("div")).className="stream-status";var t=y();if(t&&(e.style.background='url("'+t+'")',e.style.backgroundSize="cover"),r){var o=r.countdown_timestamp;if(o&&(o=new Date(1e3*parseInt(o))).getTime()>Date.now()){var i=document.createElement("div");i.className="stream-status-overlay";var l=o.toDateString(),u=o.toISOString().substr(11,5),s=r.title+"<br />"||!1;i.innerHTML=s+"Stream will start on:<br />"+l+" @ "+u,e.appendChild(i);var c=document.createElement("div");c.className="countdown",c.innerHTML="&nbsp;",i.appendChild(c),function(e){e=e.getTime();n=setInterval((function(){var t=(new Date).getTime(),r=e-t,a=Math.floor(r/864e5),o=Math.floor(r%864e5/36e5),i=Math.floor(r%36e5/6e4),l=Math.floor(r%6e4/1e3);f().querySelector(".countdown").innerHTML=a+"d "+o+"h "+i+"m "+l+"s ",r<0&&(clearInterval(n),f().querySelector(".countdown").innerHTML="Starting...")}),1e3)}(o)}}else e.textContent=a&&a.offlineText||"The stream is currently not available.",e.classList.add("no-data");f().appendChild(e)}}()}function d(){var e;u({state:"available",info:"The configured stream is available."}),o=!1,(e=f().querySelector(".stream-status"))&&e.parentNode.removeChild(e)}function f(){return e.element.parentNode.parentNode}function v(){var t=e.src,n=new XMLHttpRequest;n.onreadystatechange=function(){4==this.readyState&&200!=this.status&&i&&!o?c():4==this.readyState&&200==this.status&&o&&(e.autoplay=!0,e.source=e.source,d())},n.open("GET",t,!0),n.send()}function m(){i=!0,l||(l=!0,t=setInterval(v,a&&a.retryTimeout||3e3))}function p(){i=!1}function y(){return r&&r.image||e.source.metadata&&e.source.metadata.wowza&&e.source.metadata.wowza.placeholderImageUrl}return e.addEventListener("sourcechange",(function(f){if(e&&(r=null,a=null,o=!1,clearInterval(t),clearInterval(n),i=!1,l=!1,u=null,s=null,e.network.removeEventListener("offline",c),e.network.removeEventListener("online",d),e.removeEventListener("waiting",m),e.removeEventListener("playing",p)),a=f.source.metadata&&f.source.metadata.wowza){e&&(e.network.addEventListener("offline",c),e.network.addEventListener("online",d),e.addEventListener("waiting",m),e.addEventListener("playing",p));var v=a.jsonUrl;v&&(g=v,(b=new XMLHttpRequest).onreadystatechange=function(){4==this.readyState&&200==this.status&&(r=JSON.parse(b.responseText),s({data:r,status:"available"}),e.poster=y())},b.open("GET",g,!0),b.send()),u=a.statechangeCallback,s=a.datachangeCallback}var g,b})),{getStreamData:function(){return r},getState:function(){return o?"offline":"online"}}}};window.theoplayerWowza=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,